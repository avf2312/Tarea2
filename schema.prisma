// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                Int     @id @default(autoincrement())
  nombre            String  @db.VarChar(45)
  direccion_correo  String  @db.VarChar(45)
  descripcion       String  @db.VarChar(45)
  fecha_creacion    DateTime
  clave             String  @db.VarChar(45)

  direccionfavorita DireccionesFavoritas[]
  direcciones_bloqueada direcciones_bloqueadas[]
  correos correo[]
  destinatario destinatarios[]
}

model DireccionesFavoritas {
  id                Int  @id @default(autoincrement())
  usuario_id        Int  @unique
  fecha_agregado    DateTime
  direccion_favorita String 
  usuario             Usuario  @relation(fields: [usuario_id], references: [id])
}

model destinatarios {
  id_correo         Int     @id @default(autoincrement())
  id_destinatario   Int
  correoplop        correo  @relation(fields: [id_correo], references: [id])
  destinatarioplop  Usuario @relation(fields: [id_destinatario], references: [id])
}

model direcciones_bloqueadas {
  id                Int     @id @default(autoincrement())
  usuario_id        Int
  fecha_bloqueo     DateTime
  direccion_bloqueada String
  usuario           Usuario @relation(fields: [usuario_id], references: [id])
}

model correo {
  id                Int @id @default(autoincrement())
  remitente         Int
  asunto            String @db.VarChar(45)
  cuerpo            String @db.VarChar(400)
  fecha_envio       DateTime

  destinatarios     destinatarios[]
  remitenteplop     Usuario @relation(fields: [remitente], references: [id])
}